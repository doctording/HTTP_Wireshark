package jdbc;

import java.net.URLDecoder;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



import Table_bean.*;
import Time_bean.*;


public class Table_Con_pro {
	
	public Table_Con_pro()
	{
		super();
	}
	
  	public int getlastCon_proID(String contract_num)throws Exception 
	{

		String sql = "SELECT * FROM con_pro WHERE contract_num = '"+contract_num+"' ";
		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();;
		ResultSet rs=null;
		Con_proBean con_proinfo= new Con_proBean();
		int lastid=0;
		
		// 下面是针对数据库的具体操作
		try {
			// 连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			// 进行数据库查询操作
			rs= pstmt.executeQuery();
			// 获取公告的个数
            while (rs.next()){
            	lastid++;
            }
		}
		catch (Exception e)
			{
				throw new Exception("操作出现异常");
			}
		finally {
			// 关闭数据库连接
			rs.close();
			pstmt.close();
			dbc.close();
			}
		return lastid;		
	}
	
public void insertCon_pro(String contract_num,String pro_name,String pro_item,String style_name,String wood_name,String paint_name,float length,float height,float depth,int amount,float totals,float pro_price,float discount,float price,String con_pro_mark)throws Exception{
		String sql = "INSERT INTO `con_pro` (`con_proID`, `contract_num`, `pro_name`, `pro_item`, `style_name`, `wood_name`, `paint_name`, `length`, `height`, `depth`, `amount`, `totals`, `pro_price`, `discount`, `price`, `add_price`, `con_pro_mark`, `state`)  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();
		String id=String.valueOf(getlastCon_proID(contract_num)+1);
		int state=1;
		float add_price=0;
		if((getlastCon_proID(contract_num)+1)<10){
			id="0"+id;
		}
		String con_proID=contract_num+"00"+id;
		try{
			// 连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			
			pstmt.setString(1,con_proID);
			pstmt.setString(2,contract_num);
			pstmt.setString(3,pro_name);
			pstmt.setString(4,pro_item);
			pstmt.setString(5,style_name);
			pstmt.setString(6,wood_name);
			pstmt.setString(7,paint_name);
			pstmt.setFloat(8,length);
			pstmt.setFloat(9,height);
			pstmt.setFloat(10,depth);
			pstmt.setInt(11,amount);
			pstmt.setFloat(12,totals);
			pstmt.setFloat(13,pro_price);
			pstmt.setFloat(14,discount);
			pstmt.setFloat(15,price);
			pstmt.setFloat(16,add_price);
			pstmt.setString(17,con_pro_mark);
			pstmt.setInt(18,state);
			
			// 进行数据库插入操作
		 pstmt.executeUpdate();
		}
		
		catch(Exception e){
			throw new Exception("出现异常");
		}
		finally{
			// 关闭数据库连接
			pstmt.close();
			dbc.close();
		}
	}

public void deleteCon_pro(String contract_num)throws Exception{
	String sql = "DELETE FROM `con_pro` WHERE `contract_num`=?";
	PreparedStatement pstmt = null;
	DataBaseConnection dbc = new DataBaseConnection();
	ResultSet rs = null;
	
	try{
		// 连接数据库
		dbc.DataBase_Connection();
		pstmt = dbc.getConnection().prepareStatement(sql);
		pstmt.setString(1,contract_num);
		
	 pstmt.executeUpdate();
	}
	catch(Exception e){
		throw new Exception("出现异常");
	}
	finally{
		// 关闭数据库连接
		pstmt.close();
		dbc.close();
	}
}
		
public void updateCon_pro(String con_proID,String contract_num,String pro_name,String pro_item,String style_name,String wood_name,String paint_name,float length,float height,float depth,int amount,float totals,float pro_price,float discount,float price,String con_pro_mark)throws Exception{
	String sql = "UPDATE  `con_pro` SET `contract_num`=?, `pro_name`=?, `pro_item`=?, `style_name`=?, `wood_name`=?, `paint_name`=?, `length`=?, `height`=?, `depth`=?, `amount`=?, `totals`=?, `pro_price`=?, `discount`=?, `price`=?, `add_price`=?, `con_pro_mark`=?  WHERE `con_proID`=?";
	PreparedStatement pstmt = null;
	DataBaseConnection dbc = new DataBaseConnection();
	float add_price=0;
	
	try{
		// 连接数据库
		dbc.DataBase_Connection();
		pstmt = dbc.getConnection().prepareStatement(sql);
		pstmt.setString(1,contract_num);
		pstmt.setString(2,pro_name);
		pstmt.setString(3,pro_item);
		pstmt.setString(4,style_name);
		pstmt.setString(5,wood_name);
		pstmt.setString(6,paint_name);
		pstmt.setFloat(7,length);
		pstmt.setFloat(8,height);
		pstmt.setFloat(9,depth);
		pstmt.setInt(10,amount);
		pstmt.setFloat(11,totals);
		pstmt.setFloat(12,pro_price);
		pstmt.setFloat(13,discount);
		pstmt.setFloat(14,price);
		pstmt.setFloat(15,add_price);
		pstmt.setString(16,con_pro_mark);
		pstmt.setString(17,con_proID);
		
		// 进行数据库插入操作
	 pstmt.executeUpdate();
	}
	catch(Exception e){
		throw new Exception("出现异常");
	}
	finally{
		// 关闭数据库连接
		pstmt.close();
		dbc.close();
	}
	
}
public void updateCon_proID(String con_proID,String con_proID1)throws Exception{
	String sql = "UPDATE  `con_pro` SET  `con_proID`=? WHERE `con_proID`=?";
	PreparedStatement pstmt = null;
	DataBaseConnection dbc = new DataBaseConnection();
	
	try{
		// 连接数据库
		dbc.DataBase_Connection();
		pstmt = dbc.getConnection().prepareStatement(sql);
		pstmt.setString(1,con_proID);
		pstmt.setString(2,con_proID1);
		// 进行数据库插入操作
	 pstmt.executeUpdate();
	}
	catch(Exception e){
		throw new Exception("出现异常");
	}
	finally{
		// 关闭数据库连接
		pstmt.close();
		dbc.close();
	}
	
}


	public ArrayList findTotalCon_pro(String contract_num) throws Exception{
		ArrayList con_prolist = new ArrayList();
		String sql = "select * from con_pro where contract_num = ? order by(pro_name)";
		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs = null;
			
		try{
			//连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			pstmt.setString(1,contract_num);
			//数据库查询操作
			rs = pstmt.executeQuery();
			int index = 0;
			while(rs.next())
			{
				// 循环到第index条
				index++;
				// 如果还没有到要显示的第一条记录，则不处理，继续遍历

				// 获取结果集中的信息
				String tmpCon_proID=rs.getString(1);
				
				String tmpContract_num=rs.getString(2);
				tmpContract_num=new String(tmpContract_num.getBytes("GBK"));
				
				String tmpPro_name=rs.getString(3);
				tmpPro_name=new String(tmpPro_name.getBytes("GBK"));
				
				String tmpPro_item=rs.getString(4);
				tmpPro_item=new String(tmpPro_item.getBytes("GBK"));
				
				String tmpStyle_name=rs.getString(5);
				tmpStyle_name=new String(tmpStyle_name.getBytes("GBK"));
				
				String tmpWood_name=rs.getString(6);
				tmpWood_name=new String(tmpWood_name.getBytes("GBK"));
				
				String tmpPaint_name=rs.getString(7);
				tmpPaint_name=new String(tmpPaint_name.getBytes("GBK"));
								
				float tmpLength=rs.getFloat(8);
				float tmpHeight=rs.getFloat(9);
				float tmpDepth=rs.getFloat(10);
				int tmpAmount=rs.getInt(11);
				float tmpTotals=rs.getFloat(12);
				float tmpPro_price=rs.getFloat(13);
				float tmpDiscount=rs.getFloat(14);
				float tmpPrice=rs.getFloat(15);
				float tmpAdd_price=rs.getFloat(16);

				String tmpCon_pro_mark=rs.getString(17);
				// 进行编码转换
				tmpCon_pro_mark=new String(tmpCon_pro_mark.getBytes("GBK"));
				int tmpState=rs.getInt(18);
			
			
				Con_proBean con_pro = new Con_proBean();
				con_pro.setCon_proID(tmpCon_proID);
				con_pro.setContract_num(tmpContract_num);
				con_pro.setPro_name(tmpPro_name);
				con_pro.setPro_item(tmpPro_item);
				con_pro.setStyle_name(tmpStyle_name);
				con_pro.setWood_name(tmpWood_name);
				con_pro.setPaint_name(tmpPaint_name);			
				con_pro.setLength(tmpLength);
				con_pro.setHeight(tmpHeight);
				con_pro.setDepth(tmpDepth);
				con_pro.setAmount(tmpAmount);
				con_pro.setTotals(tmpTotals);
				con_pro.setPro_price(tmpPro_price);
				con_pro.setDiscount(tmpDiscount);
				con_pro.setPrice(tmpPrice);
				con_pro.setAdd_price(tmpAdd_price);
				con_pro.setCon_pro_mark(tmpCon_pro_mark);
				con_pro.setState(tmpState);
				
				// 把对象添加到集合中
				con_prolist.add(con_pro);
			}
		}
		catch (Exception e){
			throw new Exception("操作异常");
		}
		//关闭数据库
		finally{
			rs.close();
			pstmt.close();
			dbc.close();
		}
			return con_prolist;
	}	
	//带查询的产品列表
	public ArrayList findTotalCon_pro(String contract_num,String searchType, String searchValue) throws Exception{
		ArrayList con_prolist = new ArrayList();
		String sql = "select * from con_pro where contract_num = ? ";
		if(searchValue!=""&&searchValue!=null){
			searchValue=URLDecoder.decode(searchValue,"UTF-8");
			if (searchType.equals("5")) {
				sql += " and pro_name ='" + searchValue + "'";
			} else if (searchType.equals("6")) {
				sql += " and pro_item ='" + searchValue + "'";
			}
			}
		sql +=" order by(pro_name)";

		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs = null;
			
		try{
			//连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			pstmt.setString(1,contract_num);
			//数据库查询操作
			rs = pstmt.executeQuery();
			int index = 0;
			while(rs.next())
			{
				// 循环到第index条
				index++;
				// 如果还没有到要显示的第一条记录，则不处理，继续遍历

				// 获取结果集中的信息
				String tmpCon_proID=rs.getString(1);
				
				String tmpContract_num=rs.getString(2);
				tmpContract_num=new String(tmpContract_num.getBytes("GBK"));
				
				String tmpPro_name=rs.getString(3);
				tmpPro_name=new String(tmpPro_name.getBytes("GBK"));
				
				String tmpPro_item=rs.getString(4);
				tmpPro_item=new String(tmpPro_item.getBytes("GBK"));
				
				String tmpStyle_name=rs.getString(5);
				tmpStyle_name=new String(tmpStyle_name.getBytes("GBK"));
				
				String tmpWood_name=rs.getString(6);
				tmpWood_name=new String(tmpWood_name.getBytes("GBK"));
				
				String tmpPaint_name=rs.getString(7);
				tmpPaint_name=new String(tmpPaint_name.getBytes("GBK"));
								
				float tmpLength=rs.getFloat(8);
				float tmpHeight=rs.getFloat(9);
				float tmpDepth=rs.getFloat(10);
				int tmpAmount=rs.getInt(11);
				float tmpTotals=rs.getFloat(12);
				float tmpPro_price=rs.getFloat(13);
				float tmpDiscount=rs.getFloat(14);
				float tmpPrice=rs.getFloat(15);
				float tmpAdd_price=rs.getFloat(16);

				String tmpCon_pro_mark=rs.getString(17);
				// 进行编码转换
				tmpCon_pro_mark=new String(tmpCon_pro_mark.getBytes("GBK"));
				int tmpState=rs.getInt(18);
			
			
				Con_proBean con_pro = new Con_proBean();
				con_pro.setCon_proID(tmpCon_proID);
				con_pro.setContract_num(tmpContract_num);
				con_pro.setPro_name(tmpPro_name);
				con_pro.setPro_item(tmpPro_item);
				con_pro.setStyle_name(tmpStyle_name);
				con_pro.setWood_name(tmpWood_name);
				con_pro.setPaint_name(tmpPaint_name);			
				con_pro.setLength(tmpLength);
				con_pro.setHeight(tmpHeight);
				con_pro.setDepth(tmpDepth);
				con_pro.setAmount(tmpAmount);
				con_pro.setTotals(tmpTotals);
				con_pro.setPro_price(tmpPro_price);
				con_pro.setDiscount(tmpDiscount);
				con_pro.setPrice(tmpPrice);
				con_pro.setAdd_price(tmpAdd_price);
				con_pro.setCon_pro_mark(tmpCon_pro_mark);
				con_pro.setState(tmpState);
				
				// 把对象添加到集合中
				con_prolist.add(con_pro);
			}
		}
		catch (Exception e){
			throw new Exception("操作异常");
		}
		//关闭数据库
		finally{
			rs.close();
			pstmt.close();
			dbc.close();
		}
			return con_prolist;
	}	

	
	public Con_proBean selectCon_proByContract_num(String contract_num) throws Exception  {
		
		Con_proBean con_pro = new Con_proBean();
		String sql = "select * from con_pro where contract_num = ?";
		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs=null;
		
		try {
			// 连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			pstmt.setString(1, contract_num);
			// 进行数据库查询操作
			rs= pstmt.executeQuery();
			
			if(rs.next()){
				con_pro.setCon_proID(rs.getString("Con_proID"));
				con_pro.setContract_num(rs.getString("Contract_num"));
				con_pro.setPro_name(rs.getString("Pro_name"));
				con_pro.setPro_item(rs.getString("Pro_item"));
				con_pro.setStyle_name(rs.getString("Style_name"));
				con_pro.setWood_name(rs.getString("Wood_name"));
				con_pro.setPaint_name(rs.getString("Paint_name"));
				con_pro.setLength(rs.getFloat("Length"));
				con_pro.setHeight(rs.getFloat("Height"));
				con_pro.setDepth(rs.getFloat("Depth"));
				con_pro.setAmount(rs.getInt("Amount"));
				con_pro.setTotals(rs.getFloat("Totals"));
				con_pro.setPro_price(rs.getFloat("Pro_price"));
				con_pro.setDiscount(rs.getFloat("Discount"));
				con_pro.setPrice(rs.getFloat("Price"));
				con_pro.setAdd_price(rs.getFloat("Add_price"));
				con_pro.setCon_pro_mark(rs.getString("Con_pro_mark"));
				con_pro.setState(rs.getInt("State"));
			}
		}
		catch (Exception e) {
				e.printStackTrace();
			}
		finally {
			// 关闭数据库连接
			rs.close();
			pstmt.close();
			dbc.close();	
			}
        return con_pro;
	}
	public ArrayList selectByContract_num(String contract_num)throws Exception  {
		ArrayList con_prolist = new ArrayList();
		StringBuffer sql1 = new StringBuffer();
		PreparedStatement pstmt = null;
		sql1.append("select * from con_pro where contract_num='");
		sql1.append(contract_num);
		sql1.append("'");
		String sql = sql1.toString();
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs=null;
		try {

			// 连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			
			// 进行数据库查询操作
			rs= pstmt.executeQuery();
			
			while(rs.next()){
				// 获取结果集中的信息
				String tmpCon_proID=rs.getString(1);
				
				String tmpContract_num=rs.getString(2);
				tmpContract_num=new String(tmpContract_num.getBytes("GBK"));
				
				String tmpPro_name=rs.getString(3);
				tmpPro_name=new String(tmpPro_name.getBytes("GBK"));
				
				String tmpPro_item=rs.getString(4);
				tmpPro_item=new String(tmpPro_item.getBytes("GBK"));
				
				String tmpStyle_name=rs.getString(5);
				tmpStyle_name=new String(tmpStyle_name.getBytes("GBK"));
				
				String tmpWood_name=rs.getString(6);
				tmpWood_name=new String(tmpWood_name.getBytes("GBK"));
				
				String tmpPaint_name=rs.getString(7);
				tmpPaint_name=new String(tmpPaint_name.getBytes("GBK"));
								
				float tmpLength=rs.getFloat(8);
				float tmpHeight=rs.getFloat(9);
				float tmpDepth=rs.getFloat(10);
				int tmpAmount=rs.getInt(11);
				float tmpTotals=rs.getFloat(12);
				float tmpPro_price=rs.getFloat(13);
				float tmpDiscount=rs.getFloat(14);
				float tmpPrice=rs.getFloat(15);
				float tmpAdd_price=rs.getFloat(16);

				String tmpCon_pro_mark=rs.getString(17);
				// 进行编码转换
				tmpCon_pro_mark=new String(tmpCon_pro_mark.getBytes("GBK"));
				int tmpState=rs.getInt(18);
			
				Con_proBean con_pro = new Con_proBean();
				con_pro.setCon_proID(tmpCon_proID);
				con_pro.setContract_num(tmpContract_num);
				con_pro.setPro_name(tmpPro_name);
				con_pro.setPro_item(tmpPro_item);
				con_pro.setStyle_name(tmpStyle_name);
				con_pro.setWood_name(tmpWood_name);
				con_pro.setPaint_name(tmpPaint_name);			
				con_pro.setLength(tmpLength);
				con_pro.setHeight(tmpHeight);
				con_pro.setDepth(tmpDepth);
				con_pro.setAmount(tmpAmount);
				con_pro.setTotals(tmpTotals);
				con_pro.setPro_price(tmpPro_price);
				con_pro.setDiscount(tmpDiscount);
				con_pro.setPrice(tmpPrice);
				con_pro.setAdd_price(tmpAdd_price);
				con_pro.setCon_pro_mark(tmpCon_pro_mark);
				con_pro.setState(tmpState);
				
				// 把对象添加到集合中
				con_prolist.add(con_pro);
			}
		}
		catch (Exception e) {
				e.printStackTrace();
			}
		finally {
			// 关闭数据库连接
			rs.close();
			pstmt.close();
			dbc.close();	
			}
        return con_prolist;
		
	}
	public ArrayList selectByContract_num(String contract_num,String searchType, String searchValue)throws Exception  {
		ArrayList con_prolist = new ArrayList();
		StringBuffer sql1 = new StringBuffer();
		PreparedStatement pstmt = null;
		sql1.append("select * from con_pro where contract_num='");
		sql1.append(contract_num);
		sql1.append("'");
		String sql = sql1.toString();
		if(searchValue!=""&&searchValue!=null){
			searchValue=URLDecoder.decode(searchValue,"UTF-8");
		if (searchType.equals("5")) {
			sql += " and pro_name ='" + searchValue + "'";
		} else if (searchType.equals("6")) {
			sql += " and pro_item ='" + searchValue + "'";
		}
		}
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs=null;
		try {

			// 连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			
			// 进行数据库查询操作
			rs= pstmt.executeQuery();
			
			while(rs.next()){
				// 获取结果集中的信息
				String tmpCon_proID=rs.getString(1);
				
				String tmpContract_num=rs.getString(2);
				tmpContract_num=new String(tmpContract_num.getBytes("GBK"));
				
				String tmpPro_name=rs.getString(3);
				tmpPro_name=new String(tmpPro_name.getBytes("GBK"));
				
				String tmpPro_item=rs.getString(4);
				tmpPro_item=new String(tmpPro_item.getBytes("GBK"));
				
				String tmpStyle_name=rs.getString(5);
				tmpStyle_name=new String(tmpStyle_name.getBytes("GBK"));
				
				String tmpWood_name=rs.getString(6);
				tmpWood_name=new String(tmpWood_name.getBytes("GBK"));
				
				String tmpPaint_name=rs.getString(7);
				tmpPaint_name=new String(tmpPaint_name.getBytes("GBK"));
								
				float tmpLength=rs.getFloat(8);
				float tmpHeight=rs.getFloat(9);
				float tmpDepth=rs.getFloat(10);
				int tmpAmount=rs.getInt(11);
				float tmpTotals=rs.getFloat(12);
				float tmpPro_price=rs.getFloat(13);
				float tmpDiscount=rs.getFloat(14);
				float tmpPrice=rs.getFloat(15);
				float tmpAdd_price=rs.getFloat(16);

				String tmpCon_pro_mark=rs.getString(17);
				// 进行编码转换
				tmpCon_pro_mark=new String(tmpCon_pro_mark.getBytes("GBK"));
				int tmpState=rs.getInt(18);
			
				Con_proBean con_pro = new Con_proBean();
				con_pro.setCon_proID(tmpCon_proID);
				con_pro.setContract_num(tmpContract_num);
				con_pro.setPro_name(tmpPro_name);
				con_pro.setPro_item(tmpPro_item);
				con_pro.setStyle_name(tmpStyle_name);
				con_pro.setWood_name(tmpWood_name);
				con_pro.setPaint_name(tmpPaint_name);			
				con_pro.setLength(tmpLength);
				con_pro.setHeight(tmpHeight);
				con_pro.setDepth(tmpDepth);
				con_pro.setAmount(tmpAmount);
				con_pro.setTotals(tmpTotals);
				con_pro.setPro_price(tmpPro_price);
				con_pro.setDiscount(tmpDiscount);
				con_pro.setPrice(tmpPrice);
				con_pro.setAdd_price(tmpAdd_price);
				con_pro.setCon_pro_mark(tmpCon_pro_mark);
				con_pro.setState(tmpState);
				
				// 把对象添加到集合中
				con_prolist.add(con_pro);
			}
		}
		catch (Exception e) {
				e.printStackTrace();
			}
		finally {
			// 关闭数据库连接
			rs.close();
			pstmt.close();
			dbc.close();	
			}
        return con_prolist;
		
	}

	public ArrayList selectByCon_proID(String key)throws Exception  {
		ArrayList con_prolist = new ArrayList();
		StringBuffer sql1 = new StringBuffer();
		PreparedStatement pstmt = null;
		sql1.append("select * from con_pro where con_proID like'");
		sql1.append(key);
		sql1.append("%' order by con_proID asc");
		String sql = sql1.toString();
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs=null;
		try {

			// 连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			
			// 进行数据库查询操作
			rs= pstmt.executeQuery();
			
			while(rs.next()){
				// 获取结果集中的信息
				String tmpCon_proID=rs.getString(1);
				
				String tmpContract_num=rs.getString(2);
				tmpContract_num=new String(tmpContract_num.getBytes("GBK"));
				
				String tmpPro_name=rs.getString(3);
				tmpPro_name=new String(tmpPro_name.getBytes("GBK"));
				
				String tmpPro_item=rs.getString(4);
				tmpPro_item=new String(tmpPro_item.getBytes("GBK"));
				
				String tmpStyle_name=rs.getString(5);
				tmpStyle_name=new String(tmpStyle_name.getBytes("GBK"));
				
				String tmpWood_name=rs.getString(6);
				tmpWood_name=new String(tmpWood_name.getBytes("GBK"));
				
				String tmpPaint_name=rs.getString(7);
				tmpPaint_name=new String(tmpPaint_name.getBytes("GBK"));
								
				float tmpLength=rs.getFloat(8);
				float tmpHeight=rs.getFloat(9);
				float tmpDepth=rs.getFloat(10);
				int tmpAmount=rs.getInt(11);
				float tmpTotals=rs.getFloat(12);
				float tmpPro_price=rs.getFloat(13);
				float tmpDiscount=rs.getFloat(14);
				float tmpPrice=rs.getFloat(15);
				float tmpAdd_price=rs.getFloat(16);

				String tmpCon_pro_mark=rs.getString(17);
				// 进行编码转换
				tmpCon_pro_mark=new String(tmpCon_pro_mark.getBytes("GBK"));
				int tmpState=rs.getInt(18);
			
				Con_proBean con_pro = new Con_proBean();
				con_pro.setCon_proID(tmpCon_proID);
				con_pro.setContract_num(tmpContract_num);
				con_pro.setPro_name(tmpPro_name);
				con_pro.setPro_item(tmpPro_item);
				con_pro.setStyle_name(tmpStyle_name);
				con_pro.setWood_name(tmpWood_name);
				con_pro.setPaint_name(tmpPaint_name);			
				con_pro.setLength(tmpLength);
				con_pro.setHeight(tmpHeight);
				con_pro.setDepth(tmpDepth);
				con_pro.setAmount(tmpAmount);
				con_pro.setTotals(tmpTotals);
				con_pro.setPro_price(tmpPro_price);
				con_pro.setDiscount(tmpDiscount);
				con_pro.setPrice(tmpPrice);
				con_pro.setAdd_price(tmpAdd_price);
				con_pro.setCon_pro_mark(tmpCon_pro_mark);
				con_pro.setState(tmpState);
				
				// 把对象添加到集合中
				con_prolist.add(con_pro);
			}
		}
		catch (Exception e) {
				e.printStackTrace();
			}
		finally {
			// 关闭数据库连接
			rs.close();
			pstmt.close();
			dbc.close();	
			}
        return con_prolist;
		
	}
	/* 回复数更新 ,回复数删除
	 * public int updateCount(String con_proID)throws Exception  {
		
		int update_count=0;
		
		String sql="update message set count=count+1 where messageID= ? ";

		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();

		// 下面是针对数据库的具体操作
		try {
			// 连接数据库		
		dbc.DataBase_Connection();
		pstmt = dbc.getConnection().prepareStatement(sql);
		pstmt.setInt(1, Integer.parseInt(messageID));
		update_count=pstmt.executeUpdate();

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
		// 关闭数据库连接
			pstmt.close();
			dbc.close();
	    }	
		return update_count;
	}
	
	public int ClearTableCon_pro()throws Exception {

		String sql = "DELETE  FROM con_pro";
		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();
		int delete_count=0;

		// 下面是针对数据库的具体操作
		try {
			// 连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			// 进行数据库更新操作
			delete_count=pstmt.executeUpdate();
			
		}
		catch (Exception e)
		{
			throw new Exception("操作出现异常");
		}
		finally
		{
			// 关闭数据库连接
			pstmt.close();
			dbc.close();

		}
		return delete_count;
	}*/
	public ArrayList findCon_pro(String contract_num,String pro_name) throws Exception{
		ArrayList con_prolist = new ArrayList();
		String sql = "select * from con_pro where contract_num = ? AND pro_name=?";
		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs = null;
			
		try{
			//连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			pstmt.setString(1,contract_num);
			pstmt.setString(2,pro_name);
			//数据库查询操作
			rs = pstmt.executeQuery();
			int index = 0;
			while(rs.next())
			{
				// 循环到第index条
				index++;
				// 如果还没有到要显示的第一条记录，则不处理，继续遍历

				// 获取结果集中的信息
				
				String tmpCon_proID=rs.getString(1);
				
				String tmpContract_num=rs.getString(2);
				tmpContract_num=new String(tmpContract_num.getBytes("GBK"));
				
				String tmpPro_name=rs.getString(3);
				tmpPro_name=new String(tmpPro_name.getBytes("GBK"));
				
				String tmpPro_item=rs.getString(4);
				tmpPro_item=new String(tmpPro_item.getBytes("GBK"));
				
				String tmpStyle_name=rs.getString(5);
				tmpStyle_name=new String(tmpStyle_name.getBytes("GBK"));
				
				String tmpWood_name=rs.getString(6);
				tmpWood_name=new String(tmpWood_name.getBytes("GBK"));
				
				String tmpPaint_name=rs.getString(7);
				tmpPaint_name=new String(tmpPaint_name.getBytes("GBK"));
								
				float tmpLength=rs.getFloat(8);
				float tmpHeight=rs.getFloat(9);
				float tmpDepth=rs.getFloat(10);
				int tmpAmount=rs.getInt(11);
				float tmpTotals=rs.getFloat(12);
				float tmpPro_price=rs.getFloat(13);
				float tmpDiscount=rs.getFloat(14);
				float tmpPrice=rs.getFloat(15);
				float tmpAdd_price=rs.getFloat(16);

				String tmpCon_pro_mark=rs.getString(17);
				// 进行编码转换
				tmpCon_pro_mark=new String(tmpCon_pro_mark.getBytes("GBK"));
				int tmpState=rs.getInt(18);
			
			
				Con_proBean con_pro = new Con_proBean();
				con_pro.setCon_proID(tmpCon_proID);
				con_pro.setContract_num(tmpContract_num);
				con_pro.setPro_name(tmpPro_name);
				con_pro.setPro_item(tmpPro_item);
				con_pro.setStyle_name(tmpStyle_name);
				con_pro.setWood_name(tmpWood_name);
				con_pro.setPaint_name(tmpPaint_name);			
				con_pro.setLength(tmpLength);
				con_pro.setHeight(tmpHeight);
				con_pro.setDepth(tmpDepth);
				con_pro.setAmount(tmpAmount);
				con_pro.setTotals(tmpTotals);
				con_pro.setPro_price(tmpPro_price);
				con_pro.setDiscount(tmpDiscount);
				con_pro.setPrice(tmpPrice);
				con_pro.setAdd_price(tmpAdd_price);
				con_pro.setCon_pro_mark(tmpCon_pro_mark);
				con_pro.setState(tmpState);
				
				// 把对象添加到集合中
				con_prolist.add(con_pro);
			}
		}
		catch (Exception e){
			throw new Exception("操作异常");
		}
		//关闭数据库
		finally{
			rs.close();
			pstmt.close();
			dbc.close();
		}
			return con_prolist;
	}	
	public ArrayList findDistnCon_pro(String contract_num) throws Exception{
		ArrayList con_prolist = new ArrayList();
		String sql = "select distinct  pro_name  from con_pro where contract_num = ?";
		PreparedStatement pstmt = null;
		DataBaseConnection dbc = new DataBaseConnection();
		ResultSet rs = null;
			
		try{
			//连接数据库
			dbc.DataBase_Connection();
			pstmt = dbc.getConnection().prepareStatement(sql);
			pstmt.setString(1,contract_num);
			//数据库查询操作
			rs = pstmt.executeQuery();
			int index = 0;
			while(rs.next())
			{
				// 循环到第index条
				index++;
				// 如果还没有到要显示的第一条记录，则不处理，继续遍历

				// 获取结果集中的信息
				
		
				String tmpPro_name=rs.getString(1);
				tmpPro_name=new String(tmpPro_name.getBytes("GBK"));
				
				Con_proBean con_pro = new Con_proBean();
				con_pro.setPro_name(tmpPro_name);
			
				// 把对象添加到集合中
				con_prolist.add(con_pro);
			}
		}
		catch (Exception e){
			throw new Exception("操作异常");
		}
		//关闭数据库
		finally{
			rs.close();
			pstmt.close();
			dbc.close();
		}
			return con_prolist;
	}	
		
	
}
